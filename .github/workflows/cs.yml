#=================================================
#虚拟机
#=================================================

name: 02测试

on: 
  release:
    types: [published]
  push:
    branches: 
      - master
    paths:
      - 'cs.sh'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: [started]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: 查看
      uses: actions/checkout@master

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "Deleting files, please wait ..."
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d/*
        sudo swapoff /swapfile
        sudo rm -f /swapfile
        #docker rmi `docker images -q`
        #sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq update
        #sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        curl -fsSL https://raw.githubusercontent.com/g0g001/dotfiles/master/.bashrc >> ~/.bashrc
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
#    - name: 克隆源代码
#      env: 
#        REPO_URL: https://github.com/g0g001/lede
#        REPO_BRANCH: master
#      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

#    - name: 下载软件更新
#      run: cd openwrt && ./scripts/feeds update -a

#    - name: 安装软件更新
#      run: cd openwrt && ./scripts/feeds install -a

    - name: 加载自定义配置
      run: |
        mkdir openwrt
        pwd > 00.txt
        ls >> 00.txt
        mv cs.sh openwrt/cs.sh
        mv 00.txt openwrt/00.txt
        cd openwrt
        mkdir bin
        mv cs.sh bin/cs.sh
        mv 00.txt bin/00.txt
        cd ../

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master

    - name: 上载bin目录
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: OpenWrt_bin
        path: openwrt/bin
